{"map":"{\"version\":3,\"file\":\"main.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../lib/query/main.ts\"],\"names\":[],\"mappings\":\"AAAA;;GAEG;AACH,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAClC,OAAO,KAAK,KAAK,MAAM,SAAS,CAAC;AAQjC,OAAO,EAAE,oBAAoB,EAAE,kBAAkB,EAAE,MAAM,kBAAkB,CAAC;AAE5E,IAAM,yBAAyB,GAAG,kBAAkB,CAAC;IACnD,QAAQ,EAAE,eAAe;CAC1B,CAAC,CAAC;AAEH,IAAM,aAAa,GAAG,UAAC,EAWtB;;QAVC,0BAAU,EACV,sBAAQ,EACR,gBAAK,EACL,kBAAM,EACN,gCAAa,EACb,sBAAmB,EAAnB,wCAAmB;IAMnB,IAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACpC,IAAM,QAAQ,GAAG,IAAI,0BAAqB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC;IAChE,IAAM,YAAY,GAChB,cAAc,uBAAsB,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAEhE,QAAQ;IACR,qDAAqD;IACrD,2BAA2B;IAC3B,mDAAmD;IACnD,+CAA+C;IAC/C,0DAA0D;IAC1D,OAAO,oBAAoB,CAAC;QAC1B,UAAU,YAAA;QACV,MAAM,mBAAoB;QAC1B,IAAI,EAAE,EAAE,CAAC,SAAS,CAAC,EAAE,KAAK,OAAA,EAAE,CAAC;QAC7B,MAAM,EAAE,MAAa;QACrB,cAAc;YACZ,iGAAyD;YACzD,4BAAwB,YAAY;eACrC;QACD,UAAU,EAAK,QAAQ,UACrB,aAAa,CAAC,CAAC,CAAI,aAAa,MAAG,CAAC,CAAC,CAAC,EAAE,IACvC,QAAU;KACd,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,OAAO,GAAG,UACrB,WAAwE,IACrE,OAAA,aAAa,CAAC,WAAW,CAAC,EAA1B,CAA0B,CAAC;AAEhC,MAAM,CAAC,IAAM,oBAAoB,GAAG,UAClC,eAIC,IACE,OAAA,aAAa,CAAC,eAAe,CAAC,EAA9B,CAA8B,CAAC;AAEpC,MAAM,CAAC,IAAM,QAAQ,GAAG,UAAC,EAUxB;QATC,0BAAU,EACV,sBAAQ,EACR,YAAG,EACH,sBAAQ,EACR,kBAAM;IAMN,OAAA,OAAO,CAAC;QACN,UAAU,YAAA;QACV,QAAQ,UAAA;QACR,KAAK,EAAE,6BACH,GAAG,SAAI,QAAQ,uBAElB;QACD,MAAM,QAAA;KACP,CAAC,CAAC,IAAI,CAAC,UAAC,GAAQ;QACf,IAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,wCAAwC;QACtE,IAAM,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACpD,QAAQ,CAAC,IAAI,GAAG;YACd,OAAA,cAAc,EAAE,CAAC,IAAI,CAAC,UAAC,IAAS;gBAC9B,IAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC;gBAC/C,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;oBACnC,OAAO;wBACL,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK;qBAC5B,CAAC;iBACH;gBACD,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC;QARF,CAQE,CAAC;QACL,OAAO,QAAQ,CAAC;IAClB,CAAC,CAAC;AAtBF,CAsBE,CAAC;AAEL,MAAM,CAAC,IAAM,OAAO,GAAG,UAAC,EASvB;;QARC,0BAAU,EACV,sBAAQ,EACR,gBAAK,EACL,sBAAmB,EAAnB,wCAAmB,EACnB,kBAAM;IAKE,IAAA,0BAA+B,EAA/B,2DAA+B,CAAoB;IAE3D,OAAO,oBAAoB,CAAC;QAC1B,UAAU,YAAA;QACV,MAAM,mBAAoB;QAC1B,IAAI,EAAE,EAAE,CAAC,SAAS,CAAC,EAAE,KAAK,OAAA,EAAE,CAAC;QAC7B,cAAc;YACZ,4BAAwB,MAAM;YAC9B,iGAAyD;eAC1D;QACD,MAAM,EAAE,MAAa;QACrB,UAAU,EAAK,QAAQ,aAAU;KAClC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,IAAI,GAAG,UAAC,EAA2B;;QAAzB,0BAAU;IAC/B,OAAA,yBAAyB,CAAC;QACxB,UAAU,YAAA;QACV,cAAc;YACZ,yDAAwC;eACzC;KACF,CAAC;AALF,CAKE,CAAC;AAEL,MAAM,CAAC,IAAM,IAAI,GAAG,UAAC,EAGe;QAFlC,0BAAU,EACV,oBAAO;IAEP,OAAA,yBAAyB,CAAC;QACxB,UAAU,YAAA;QACV,MAAM,uBAAsB;QAC5B,UAAU,EAAE,OAAO;KACpB,CAAC;AAJF,CAIE,CAAC;AAEL,MAAM,CAAC,IAAM,GAAG,GAAG,UAAC,EAGgB;;QAFlC,0BAAU,EACV,oBAAO;IAEP,OAAA,yBAAyB,CAAC;QACxB,UAAU,YAAA;QACV,cAAc;YACZ,yDAAwC;eACzC;QACD,UAAU,EAAE,OAAO;KACpB,CAAC;AANF,CAME,CAAC\"}","code":"/**\r\n * @module stardogjs.query\r\n */\r\nimport * as qs from 'querystring';\r\nimport * as utils from './utils';\r\nimport { dispatchGenericFetch, getFetchDispatcher } from '../request-utils';\r\nvar dispatchAdminQueriesFetch = getFetchDispatcher({\r\n    basePath: 'admin/queries',\r\n});\r\nvar dispatchQuery = function (_a) {\r\n    var _b;\r\n    var connection = _a.connection, database = _a.database, query = _a.query, params = _a.params, transactionId = _a.transactionId, _c = _a.requestHeaders, requestHeaders = _c === void 0 ? {} : _c;\r\n    var type = utils.queryType(query);\r\n    var resource = type === \"update\" /* UPDATE */ ? 'update' : 'query';\r\n    var acceptHeader = requestHeaders[\"Accept\" /* ACCEPT */] || utils.mimeType(query);\r\n    // TODO:\r\n    // Paths queries will return duplicate variable names\r\n    // in body.head.vars (#135)\r\n    // e.g., `paths start ?x end ?y via ?p` will return\r\n    // ['x', 'x', 'p', 'y', 'y']. Use of a Set here\r\n    // simply eliminates the duplicates for things like Studio\r\n    return dispatchGenericFetch({\r\n        connection: connection,\r\n        method: \"POST\" /* POST */,\r\n        body: qs.stringify({ query: query }),\r\n        params: params,\r\n        requestHeaders: (_b = {},\r\n            _b[\"Content-Type\" /* CONTENT_TYPE */] = \"application/x-www-form-urlencoded\" /* FORM_URLENCODED */,\r\n            _b[\"Accept\" /* ACCEPT */] = acceptHeader,\r\n            _b),\r\n        pathSuffix: database + \"/\" + (transactionId ? transactionId + \"/\" : '') + resource,\r\n    });\r\n};\r\nexport var execute = function (executeData) { return dispatchQuery(executeData); };\r\nexport var executeInTransaction = function (executeInTxData) { return dispatchQuery(executeInTxData); };\r\nexport var property = function (_a) {\r\n    var connection = _a.connection, database = _a.database, uri = _a.uri, property = _a.property, params = _a.params;\r\n    return execute({\r\n        connection: connection,\r\n        database: database,\r\n        query: \"select * where {\\n      \" + uri + \" \" + property + \" ?val\\n    }\\n    \",\r\n        params: params,\r\n    }).then(function (res) {\r\n        var resClone = res.clone(); // just being safe, since we're mutating\r\n        var originalJsonFn = resClone.json.bind(resClone);\r\n        resClone.json = function () {\r\n            return originalJsonFn().then(function (json) {\r\n                var bindings = (json.results || {}).bindings;\r\n                if (bindings && bindings.length > 0) {\r\n                    return {\r\n                        body: bindings[0].val.value,\r\n                    };\r\n                }\r\n                return {};\r\n            });\r\n        };\r\n        return resClone;\r\n    });\r\n};\r\nexport var explain = function (_a) {\r\n    var _b;\r\n    var connection = _a.connection, database = _a.database, query = _a.query, _c = _a.requestHeaders, requestHeaders = _c === void 0 ? {} : _c, params = _a.params;\r\n    var _d = requestHeaders.Accept, Accept = _d === void 0 ? \"text/plain\" /* TEXT_PLAIN */ : _d;\r\n    return dispatchGenericFetch({\r\n        connection: connection,\r\n        method: \"POST\" /* POST */,\r\n        body: qs.stringify({ query: query }),\r\n        requestHeaders: (_b = {},\r\n            _b[\"Accept\" /* ACCEPT */] = Accept,\r\n            _b[\"Content-Type\" /* CONTENT_TYPE */] = \"application/x-www-form-urlencoded\" /* FORM_URLENCODED */,\r\n            _b),\r\n        params: params,\r\n        pathSuffix: database + \"/explain\",\r\n    });\r\n};\r\nexport var list = function (_a) {\r\n    var _b;\r\n    var connection = _a.connection;\r\n    return dispatchAdminQueriesFetch({\r\n        connection: connection,\r\n        requestHeaders: (_b = {},\r\n            _b[\"Accept\" /* ACCEPT */] = \"application/json\" /* JSON */,\r\n            _b),\r\n    });\r\n};\r\nexport var kill = function (_a) {\r\n    var connection = _a.connection, queryId = _a.queryId;\r\n    return dispatchAdminQueriesFetch({\r\n        connection: connection,\r\n        method: \"DELETE\" /* DELETE */,\r\n        pathSuffix: queryId,\r\n    });\r\n};\r\nexport var get = function (_a) {\r\n    var _b;\r\n    var connection = _a.connection, queryId = _a.queryId;\r\n    return dispatchAdminQueriesFetch({\r\n        connection: connection,\r\n        requestHeaders: (_b = {},\r\n            _b[\"Accept\" /* ACCEPT */] = \"application/json\" /* JSON */,\r\n            _b),\r\n        pathSuffix: queryId,\r\n    });\r\n};\r\n//# sourceMappingURL=main.js.map"}
