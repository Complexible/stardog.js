{"map":"{\"version\":3,\"file\":\"main.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../lib/user/main.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"var _a, _b;\r\nimport { getFetchDispatcher } from '../request-utils';\r\nvar dispatchUsersFetch = getFetchDispatcher({\r\n    basePath: 'admin/users',\r\n});\r\nvar dispatchPermissionsFetch = getFetchDispatcher({\r\n    basePath: 'admin/permissions',\r\n});\r\nvar jsonAcceptHeaders = (_a = {},\r\n    _a[\"Accept\" /* ACCEPT */] = \"application/json\" /* JSON */,\r\n    _a);\r\nvar jsonContentTypeHeaders = (_b = {},\r\n    _b[\"Content-Type\" /* CONTENT_TYPE */] = \"application/json\" /* JSON */,\r\n    _b);\r\nexport var list = function (_a) {\r\n    var connection = _a.connection;\r\n    return dispatchUsersFetch({\r\n        connection: connection,\r\n    });\r\n};\r\nexport var get = function (_a) {\r\n    var connection = _a.connection, username = _a.username;\r\n    return dispatchUsersFetch({\r\n        connection: connection,\r\n        pathSuffix: username,\r\n    });\r\n};\r\nexport var create = function (_a) {\r\n    var _b;\r\n    var connection = _a.connection, _c = _a.user, name = _c.name, password = _c.password, _d = _c.superuser, superuser = _d === void 0 ? false : _d;\r\n    return dispatchUsersFetch({\r\n        connection: connection,\r\n        method: \"POST\" /* POST */,\r\n        body: JSON.stringify({\r\n            username: name,\r\n            password: password.split(''),\r\n            superuser: superuser,\r\n        }),\r\n        requestHeaders: (_b = {},\r\n            _b[\"Accept\" /* ACCEPT */] = \"application/json\" /* JSON */,\r\n            _b[\"Content-Type\" /* CONTENT_TYPE */] = \"application/json\" /* JSON */,\r\n            _b),\r\n    });\r\n};\r\nexport var changePassword = function (_a) {\r\n    var connection = _a.connection, username = _a.username, password = _a.password;\r\n    return dispatchUsersFetch({\r\n        connection: connection,\r\n        method: \"PUT\" /* PUT */,\r\n        body: JSON.stringify({ password: password }),\r\n        requestHeaders: jsonAcceptHeaders,\r\n        pathSuffix: username + \"/pwd\",\r\n    });\r\n}; // TODO: apply httpMessage?\r\nexport var valid = function (_a) {\r\n    var connection = _a.connection;\r\n    return dispatchUsersFetch({\r\n        connection: connection,\r\n        pathSuffix: 'valid',\r\n    });\r\n};\r\nexport var enabled = function (_a) {\r\n    var connection = _a.connection, username = _a.username;\r\n    return dispatchUsersFetch({\r\n        connection: connection,\r\n        requestHeaders: jsonAcceptHeaders,\r\n        pathSuffix: username + \"/enabled\",\r\n    });\r\n};\r\nexport var enable = function (_a) {\r\n    var connection = _a.connection, username = _a.username, enabled = _a.enabled;\r\n    return dispatchUsersFetch({\r\n        connection: connection,\r\n        method: \"PUT\" /* PUT */,\r\n        body: JSON.stringify({ enabled: enabled }),\r\n        pathSuffix: username + \"/enabled\",\r\n    });\r\n}; // TODO: apply httpMessage?\r\nexport var setRoles = function (_a) {\r\n    var connection = _a.connection, username = _a.username, roles = _a.roles;\r\n    return dispatchUsersFetch({\r\n        connection: connection,\r\n        method: \"PUT\" /* PUT */,\r\n        body: JSON.stringify({ roles: roles }),\r\n        requestHeaders: jsonContentTypeHeaders,\r\n        pathSuffix: username + \"/roles\",\r\n    });\r\n}; // TODO: apply httpMessage?\r\nexport var listRoles = function (_a) {\r\n    var connection = _a.connection, username = _a.username;\r\n    return dispatchUsersFetch({\r\n        connection: connection,\r\n        requestHeaders: jsonAcceptHeaders,\r\n        pathSuffix: username + \"/roles\",\r\n    });\r\n};\r\n// resource types: db, user, role, admin, metadata, named-graph, icv-constraints\r\n// actions: CREATE, DELETE, READ, WRITE, GRANT, REVOKE, EXECUTE\r\nexport var assignPermission = function (_a) {\r\n    var connection = _a.connection, username = _a.username, _b = _a.permission, action = _b.action, resources = _b.resources, resourceType = _b.resourceType;\r\n    return dispatchPermissionsFetch({\r\n        connection: connection,\r\n        method: \"PUT\" /* PUT */,\r\n        body: JSON.stringify({\r\n            action: action,\r\n            resource_type: resourceType,\r\n            resource: resources,\r\n        }),\r\n        requestHeaders: jsonContentTypeHeaders,\r\n        pathSuffix: \"user/\" + username,\r\n    });\r\n};\r\nexport var deletePermission = function (_a) {\r\n    var connection = _a.connection, username = _a.username, _b = _a.permission, action = _b.action, resources = _b.resources, resourceType = _b.resourceType;\r\n    return dispatchPermissionsFetch({\r\n        connection: connection,\r\n        method: \"POST\" /* POST */,\r\n        body: JSON.stringify({\r\n            action: action,\r\n            resource_type: resourceType,\r\n            resource: resources,\r\n        }),\r\n        requestHeaders: jsonContentTypeHeaders,\r\n        pathSuffix: \"user/\" + username + \"/delete\",\r\n    });\r\n}; // TODO: httpMessage?\r\nexport var permissions = function (_a) {\r\n    var _b;\r\n    var connection = _a.connection, username = _a.username;\r\n    return dispatchPermissionsFetch({\r\n        connection: connection,\r\n        requestHeaders: (_b = {},\r\n            _b[\"Accept\" /* ACCEPT */] = \"application/json\" /* JSON */,\r\n            _b),\r\n        pathSuffix: \"user/\" + username,\r\n    });\r\n};\r\nexport var effectivePermissions = function (_a) {\r\n    var _b;\r\n    var connection = _a.connection, username = _a.username;\r\n    return dispatchPermissionsFetch({\r\n        connection: connection,\r\n        requestHeaders: (_b = {},\r\n            _b[\"Accept\" /* ACCEPT */] = \"application/json\" /* JSON */,\r\n            _b),\r\n        pathSuffix: \"effective/user/\" + username,\r\n    });\r\n};\r\nexport var superUser = function (_a) {\r\n    var _b;\r\n    var connection = _a.connection, username = _a.username;\r\n    return dispatchUsersFetch({\r\n        connection: connection,\r\n        requestHeaders: (_b = {},\r\n            _b[\"Accept\" /* ACCEPT */] = \"application/json\" /* JSON */,\r\n            _b),\r\n        pathSuffix: username + \"/superuser\",\r\n    });\r\n};\r\nexport var deleteUser = function (_a) {\r\n    var connection = _a.connection, username = _a.username;\r\n    return dispatchUsersFetch({\r\n        connection: connection,\r\n        method: \"DELETE\" /* DELETE */,\r\n        pathSuffix: \"\" + username,\r\n    });\r\n};\r\n//# sourceMappingURL=main.js.map"}
