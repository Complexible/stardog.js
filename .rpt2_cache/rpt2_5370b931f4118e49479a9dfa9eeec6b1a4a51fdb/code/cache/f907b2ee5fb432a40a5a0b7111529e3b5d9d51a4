{"map":"{\"version\":3,\"file\":\"utils.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../lib/query/utils.ts\"],\"names\":[],\"mappings\":\"AAEA,mHAAmH;AACnH,iFAAiF;AACjF,IAAM,UAAU,GAAG,UAAC,GAAW,EAAE,MAAc,EAAE,GAAY;IAC3D,OAAA,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM;AAAhE,CAAgE,CAAC;AAEnE,IAAM,sBAAsB,GAAG,6DAA6D,CAAC;AAC7F,IAAM,aAAa,GAAG,6BAA6B,CAAC;AACpD,IAAM,iBAAiB,GAAG,KAAK,CAAC;AAEhC,MAAM,CAAC,IAAM,SAAS,GAAG,UAAC,KAAa;IACrC,0CAA0C;IAC1C,wDAAwD;IACxD,IAAM,CAAC,GAAG,KAAK;QACb,uCAAuC;SACtC,OAAO,CAAC,sBAAsB,EAAE,EAAE,CAAC;QACpC,4BAA4B;SAC3B,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC;QAC3B,+CAA+C;SAC9C,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC;SAC9B,WAAW,EAAE,CAAC;IAEjB,IAAI,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE;QAC3B,6BAAwB;KACzB;IAED,IAAI,UAAU,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE;QACxB,uBAAqB;KACtB;IAED,IAAI,UAAU,CAAC,CAAC,EAAE,WAAW,CAAC,EAAE;QAC9B,mCAA2B;KAC5B;IAED,IAAI,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,EAAE;QAC7B,iCAA0B;KAC3B;IAED,IACE,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC;QACvB,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC;QACvB,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC;QACrB,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC;QACrB,UAAU,CAAC,CAAC,EAAE,OAAO,CAAC;QACtB,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC;QACvB,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC;QACrB,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC;QACrB,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC;QACrB,UAAU,CAAC,CAAC,EAAE,KAAK,CAAC,EACpB;QACA,6BAAwB;KACzB;IAED,IAAI,UAAU,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE;QAC1B,2BAAuB;KACxB;IAED,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,QAAQ,GAAG,UAAC,KAAa;IACpC,IAAM,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;IAE9B,QAAQ,IAAI,EAAE;QACZ,2BAAsB;QACtB;YACE,mEAAuC;QACzC,qBAAmB;QACnB;YACE,yCAAgC;QAClC,iCAAyB;QACzB;YACE,uCAA+B;QACjC;YACE,uBAAuB;KAC1B;AACH,CAAC,CAAC\"}","code":"// Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\r\n// For Tableau, which doesn't support String.prototype.startsWith for some reason\r\nvar startsWith = function (str, search, pos) {\r\n    return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\r\n};\r\nvar baseAndCommentsMatcher = /^((base\\s+<[^>]*>\\s*)|([\\t ]*#([^\\n\\r]*)))([\\r|\\r\\n|\\n])/gim;\r\nvar prefixMatcher = /prefix[^:]+:\\s*<[^>]*>\\s*/gi;\r\nvar whitespaceMatcher = /\\s/g;\r\nexport var queryType = function (query) {\r\n    // Lifted from http://tinyurl.com/ybnd9wzl\r\n    // i'm almost certain I'm going to have to revisit this.\r\n    var q = query\r\n        // remove base information and comments\r\n        .replace(baseAndCommentsMatcher, '')\r\n        // remove prefix information\r\n        .replace(prefixMatcher, '')\r\n        // flatten everything down into a single string\r\n        .replace(whitespaceMatcher, '')\r\n        .toLowerCase();\r\n    if (startsWith(q, 'select')) {\r\n        return \"select\" /* SELECT */;\r\n    }\r\n    if (startsWith(q, 'ask')) {\r\n        return \"ask\" /* ASK */;\r\n    }\r\n    if (startsWith(q, 'construct')) {\r\n        return \"construct\" /* CONSTRUCT */;\r\n    }\r\n    if (startsWith(q, 'describe')) {\r\n        return \"describe\" /* DESCRIBE */;\r\n    }\r\n    if (startsWith(q, 'insert') ||\r\n        startsWith(q, 'delete') ||\r\n        startsWith(q, 'with') ||\r\n        startsWith(q, 'load') ||\r\n        startsWith(q, 'clear') ||\r\n        startsWith(q, 'create') ||\r\n        startsWith(q, 'drop') ||\r\n        startsWith(q, 'copy') ||\r\n        startsWith(q, 'move') ||\r\n        startsWith(q, 'add')) {\r\n        return \"update\" /* UPDATE */;\r\n    }\r\n    if (startsWith(q, 'paths')) {\r\n        return \"paths\" /* PATHS */;\r\n    }\r\n    return null;\r\n};\r\nexport var mimeType = function (query) {\r\n    var type = queryType(query);\r\n    switch (type) {\r\n        case \"select\" /* SELECT */:\r\n        case \"paths\" /* PATHS */:\r\n            return \"application/sparql-results+json\" /* SPARQL_RESULTS_JSON */;\r\n        case \"ask\" /* ASK */:\r\n        case \"update\" /* UPDATE */:\r\n            return \"text/boolean\" /* TEXT_BOOLEAN */;\r\n        case \"construct\" /* CONSTRUCT */:\r\n        case \"describe\" /* DESCRIBE */:\r\n            return \"text/turtle\" /* TEXT_TURTLE */;\r\n        default:\r\n            return \"*/*\" /* ALL */;\r\n    }\r\n};\r\n//# sourceMappingURL=utils.js.map","dts":{"name":"/Users/jason/Projects/stardog.js/query/utils.d.ts","writeByteOrderMark":false,"text":"import { QueryType, ContentType } from '../constants';\r\nexport declare const queryType: (query: string) => QueryType;\r\nexport declare const mimeType: (query: string) => ContentType.ALL | ContentType.SPARQL_RESULTS_JSON | ContentType.TEXT_TURTLE | ContentType.TEXT_BOOLEAN;\r\n"}}
