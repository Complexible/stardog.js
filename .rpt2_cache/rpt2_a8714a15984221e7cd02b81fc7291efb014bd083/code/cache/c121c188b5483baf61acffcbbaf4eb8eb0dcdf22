{"map":"{\"version\":3,\"file\":\"graphql.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../lib/query/graphql.ts\"],\"names\":[],\"mappings\":\"AAIA,OAAO,EAAE,oBAAoB,EAAE,MAAM,kBAAkB,CAAC;AAGxD,MAAM,CAAC,IAAM,OAAO,GAAG,UAAC,EAQvB;;QAPC,0BAAU,EACV,sBAAQ,EACR,gBAAK,EACL,iBAAc,EAAd,mCAAc;IAKd,OAAA,oBAAoB,CAAC;QACnB,UAAU,YAAA;QACV,MAAM,mBAAoB;QAC1B,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,OAAA,EAAE,SAAS,WAAA,EAAE,CAAC;QAC1C,cAAc;YACZ,qEAA8C;eAC/C;QACD,UAAU,EAAK,QAAQ,aAAU;KAClC,CAAC;AARF,CAQE,CAAC;AAEL,MAAM,CAAC,IAAM,WAAW,GAAG,UAAC,EAA6C;QAA3C,0BAAU,EAAE,sBAAQ;IAChD,OAAA,oBAAoB,CAAC;QACnB,UAAU,YAAA;QACV,UAAU,EAAK,QAAQ,qBAAkB;KAC1C,CAAC;AAHF,CAGE,CAAC;AAEL,MAAM,CAAC,IAAM,SAAS,GAAG,UAAC,EAK+B;;QAJvD,0BAAU,EACV,sBAAQ,EACR,cAAI,EACJ,kBAAM;IAEN,OAAA,oBAAoB,CAAC;QACnB,UAAU,YAAA;QACV,MAAM,iBAAmB;QACzB,IAAI,EAAE,MAAM;QACZ,cAAc;YACZ,2EAAiD;eAClD;QACD,UAAU,EAAK,QAAQ,yBAAoB,IAAM;KAClD,CAAC;AARF,CAQE,CAAC;AAEL,MAAM,CAAC,IAAM,SAAS,GAAG,UAAC,EAIe;QAHvC,0BAAU,EACV,sBAAQ,EACR,cAAI;IAEJ,OAAA,oBAAoB,CAAC;QACnB,UAAU,YAAA;QACV,UAAU,EAAK,QAAQ,yBAAoB,IAAM;KAClD,CAAC;AAHF,CAGE,CAAC;AAEL,MAAM,CAAC,IAAM,YAAY,GAAG,UAAC,EAIY;QAHvC,0BAAU,EACV,sBAAQ,EACR,cAAI;IAEJ,OAAA,oBAAoB,CAAC;QACnB,UAAU,YAAA;QACV,MAAM,uBAAsB;QAC5B,UAAU,EAAK,QAAQ,yBAAoB,IAAM;KAClD,CAAC;AAJF,CAIE,CAAC;AAEL,MAAM,CAAC,IAAM,YAAY,GAAG,UAAC,EAA6C;QAA3C,0BAAU,EAAE,sBAAQ;IACjD,OAAA,oBAAoB,CAAC;QACnB,UAAU,YAAA;QACV,MAAM,uBAAsB;QAC5B,UAAU,EAAK,QAAQ,qBAAkB;KAC1C,CAAC;AAJF,CAIE,CAAC\"}","code":"import { dispatchGenericFetch } from '../request-utils';\r\nexport var execute = function (_a) {\r\n    var _b;\r\n    var connection = _a.connection, database = _a.database, query = _a.query, _c = _a.variables, variables = _c === void 0 ? {} : _c;\r\n    return dispatchGenericFetch({\r\n        connection: connection,\r\n        method: \"POST\" /* POST */,\r\n        body: JSON.stringify({ query: query, variables: variables }),\r\n        requestHeaders: (_b = {},\r\n            _b[\"Content-Type\" /* CONTENT_TYPE */] = \"application/json\" /* JSON */,\r\n            _b),\r\n        pathSuffix: database + \"/graphql\",\r\n    });\r\n};\r\nexport var listSchemas = function (_a) {\r\n    var connection = _a.connection, database = _a.database;\r\n    return dispatchGenericFetch({\r\n        connection: connection,\r\n        pathSuffix: database + \"/graphql/schemas\",\r\n    });\r\n};\r\nexport var addSchema = function (_a) {\r\n    var _b;\r\n    var connection = _a.connection, database = _a.database, name = _a.name, schema = _a.schema;\r\n    return dispatchGenericFetch({\r\n        connection: connection,\r\n        method: \"PUT\" /* PUT */,\r\n        body: schema,\r\n        requestHeaders: (_b = {},\r\n            _b[\"Content-Type\" /* CONTENT_TYPE */] = \"application/graphql\" /* GRAPHQL */,\r\n            _b),\r\n        pathSuffix: database + \"/graphql/schemas/\" + name,\r\n    });\r\n};\r\nexport var getSchema = function (_a) {\r\n    var connection = _a.connection, database = _a.database, name = _a.name;\r\n    return dispatchGenericFetch({\r\n        connection: connection,\r\n        pathSuffix: database + \"/graphql/schemas/\" + name,\r\n    });\r\n};\r\nexport var removeSchema = function (_a) {\r\n    var connection = _a.connection, database = _a.database, name = _a.name;\r\n    return dispatchGenericFetch({\r\n        connection: connection,\r\n        method: \"DELETE\" /* DELETE */,\r\n        pathSuffix: database + \"/graphql/schemas/\" + name,\r\n    });\r\n};\r\nexport var clearSchemas = function (_a) {\r\n    var connection = _a.connection, database = _a.database;\r\n    return dispatchGenericFetch({\r\n        connection: connection,\r\n        method: \"DELETE\" /* DELETE */,\r\n        pathSuffix: database + \"/graphql/schemas\",\r\n    });\r\n};\r\n//# sourceMappingURL=graphql.js.map"}
