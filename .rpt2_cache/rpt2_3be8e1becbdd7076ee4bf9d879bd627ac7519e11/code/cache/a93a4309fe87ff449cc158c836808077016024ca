{"map":"{\"version\":3,\"file\":\"docs.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../lib/db/docs.ts\"],\"names\":[],\"mappings\":\"AAGA,iBAkEA;;AArEA;;GAEG;AACH,OAAO,QAAQ,MAAM,WAAW,CAAC;AAGjC,OAAO,EAAE,oBAAoB,EAAE,MAAM,kBAAkB,CAAC;AAMxD,MAAM,CAAC,IAAM,IAAI,GAAG,UAAC,EAA6C;;QAA3C,0BAAU,EAAE,sBAAQ;IACzC,OAAA,oBAAoB,CAAC;QACnB,UAAU,YAAA;QACV,cAAc;YACZ,yDAA8C;eAC/C;QACD,UAAU,EAAK,QAAQ,eAAY;KACpC,CAAC;AANF,CAME,CAAC;AAEL,MAAM,CAAC,IAAM,KAAK,GAAG,UAAC,EAA6C;QAA3C,0BAAU,EAAE,sBAAQ;IAC1C,OAAA,oBAAoB,CAAC;QACnB,UAAU,YAAA;QACV,MAAM,uBAAsB;QAC5B,UAAU,EAAK,QAAQ,UAAO;KAC/B,CAAC;AAJF,CAIE,CAAC;AAEL,MAAM,CAAC,IAAM,GAAG,GAAG,UAAC,EAOnB;QANC,0BAAU,EACV,sBAAQ,EACR,sBAAQ,EACR,8BAAY;IAIZ,6EAA6E;IAC7E,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;IAChC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;IAElD,OAAO,oBAAoB,CAAC;QAC1B,UAAU,YAAA;QACV,MAAM,mBAAoB;QAC1B,IAAI,EAAE,QAAe;QACrB,UAAU,EAAK,QAAQ,UAAO;QAC9B,cAAc,EAAE,QAAQ,CAAC,UAAU,EAAE;KACtC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,MAAM,GAAG,UAAO,EAIK;QAHhC,0BAAU,EACV,sBAAQ,EACR,sBAAQ;;;YAER,sBAAA,oBAAoB,CAAC;oBACnB,UAAU,YAAA;oBACV,MAAM,uBAAsB;oBAC5B,UAAU,EAAK,QAAQ,cAAS,QAAU;iBAC3C,CAAC,EAAA;;;CAAA,CAAC;AAEL,MAAM,CAAC,IAAM,GAAG,GAAG,UAAO,EAIQ;QAHhC,0BAAU,EACV,sBAAQ,EACR,sBAAQ;;;YAER,sBAAA,oBAAoB,CAAC;oBACnB,UAAU,YAAA;oBACV,UAAU,EAAK,QAAQ,cAAS,QAAU;iBAC3C,CAAC,EAAA;;;CAAA,CAAC\"}","code":"var _this = this;\r\nimport * as tslib_1 from \"tslib\";\r\n/**\r\n * @module stardogjs.db.docs\r\n */\r\nimport FormData from 'form-data';\r\nimport { dispatchGenericFetch } from '../request-utils';\r\nexport var size = function (_a) {\r\n    var _b;\r\n    var connection = _a.connection, database = _a.database;\r\n    return dispatchGenericFetch({\r\n        connection: connection,\r\n        requestHeaders: (_b = {},\r\n            _b[\"Accept\" /* ACCEPT */] = \"text/plain\" /* TEXT_PLAIN */,\r\n            _b),\r\n        pathSuffix: database + \"/docs/size\",\r\n    });\r\n};\r\nexport var clear = function (_a) {\r\n    var connection = _a.connection, database = _a.database;\r\n    return dispatchGenericFetch({\r\n        connection: connection,\r\n        method: \"DELETE\" /* DELETE */,\r\n        pathSuffix: database + \"/docs\",\r\n    });\r\n};\r\nexport var add = function (_a) {\r\n    var connection = _a.connection, database = _a.database, fileName = _a.fileName, fileContents = _a.fileContents;\r\n    // @ts-ignore: form-data types are wrong; options argument should be optional\r\n    var formData = new FormData();\r\n    formData.append('upload', fileContents, fileName);\r\n    return dispatchGenericFetch({\r\n        connection: connection,\r\n        method: \"POST\" /* POST */,\r\n        body: formData,\r\n        pathSuffix: database + \"/docs\",\r\n        requestHeaders: formData.getHeaders(),\r\n    });\r\n};\r\nexport var remove = function (_a) {\r\n    var connection = _a.connection, database = _a.database, fileName = _a.fileName;\r\n    return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        return tslib_1.__generator(this, function (_b) {\r\n            return [2 /*return*/, dispatchGenericFetch({\r\n                    connection: connection,\r\n                    method: \"DELETE\" /* DELETE */,\r\n                    pathSuffix: database + \"/docs/\" + fileName,\r\n                })];\r\n        });\r\n    });\r\n};\r\nexport var get = function (_a) {\r\n    var connection = _a.connection, database = _a.database, fileName = _a.fileName;\r\n    return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        return tslib_1.__generator(this, function (_b) {\r\n            return [2 /*return*/, dispatchGenericFetch({\r\n                    connection: connection,\r\n                    pathSuffix: database + \"/docs/\" + fileName,\r\n                })];\r\n        });\r\n    });\r\n};\r\n//# sourceMappingURL=docs.js.map"}
