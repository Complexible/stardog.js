{"map":"{\"version\":3,\"file\":\"main.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../lib/role/main.ts\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,kBAAkB,CAAC;AAItD,IAAM,kBAAkB,GAAG,kBAAkB,CAAC;IAC5C,QAAQ,EAAE,aAAa;IACvB,kBAAkB,EAAE,EAAE;CACvB,CAAC,CAAC;AACH,IAAM,wBAAwB,GAAG,kBAAkB,CAAC;IAClD,QAAQ,EAAE,mBAAmB;IAC7B,kBAAkB,EAAE,EAAE;CACvB,CAAC,CAAC;AAEH,IAAM,iBAAiB;IACrB,yDAAwC;OACzC,CAAC;AACF,IAAM,sBAAsB;IAC1B,qEAA8C;OAC/C,CAAC;AAEF,MAAM,CAAC,IAAM,MAAM,GAAG,UAAC,EAAqC;QAAnC,0BAAU,EAAE,cAAI;IACvC,OAAA,kBAAkB,CAAC;QACjB,UAAU,YAAA;QACV,MAAM,mBAAoB;QAC1B,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;QAC7C,cAAc,EAAE,sBAAsB;KACvC,CAAC;AALF,CAKE,CAAC;AAEL,MAAM,CAAC,IAAM,IAAI,GAAG,UAAC,EAA2B;QAAzB,0BAAU;IAC/B,OAAA,kBAAkB,CAAC;QACjB,UAAU,YAAA;QACV,cAAc,EAAE,iBAAiB;KAClC,CAAC;AAHF,CAGE,CAAC;AAEL,MAAM,CAAC,IAAM,UAAU,GAAG,UAAC,EAAqC;QAAnC,0BAAU,EAAE,cAAI;IAC3C,OAAA,kBAAkB,CAAC;QACjB,UAAU,YAAA;QACV,MAAM,uBAAsB;QAC5B,UAAU,EAAE,IAAI,CAAC,IAAI;KACtB,CAAC;AAJF,CAIE,CAAC;AAEL,MAAM,CAAC,IAAM,aAAa,GAAG,UAAC,EAAqC;QAAnC,0BAAU,EAAE,cAAI;IAC9C,OAAA,kBAAkB,CAAC;QACjB,UAAU,YAAA;QACV,cAAc,EAAE,iBAAiB;QACjC,UAAU,EAAK,IAAI,CAAC,IAAI,WAAQ;KACjC,CAAC;AAJF,CAIE,CAAC;AAEL,+FAA+F;AAC/F,+DAA+D;AAC/D,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAAC,EAIS;QAHxC,0BAAU,EACV,cAAI,EACJ,0BAAU;IAEV,OAAA,wBAAwB,CAAC;QACvB,UAAU,YAAA;QACV,MAAM,iBAAmB;QACzB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;YACnB,MAAM,EAAE,UAAU,CAAC,MAAM;YACzB,aAAa,EAAE,UAAU,CAAC,YAAY;YACtC,QAAQ,EAAE,UAAU,CAAC,SAAS;SAC/B,CAAC;QACF,cAAc,EAAE,sBAAsB;QACtC,UAAU,EAAE,UAAQ,IAAI,CAAC,IAAM;KAChC,CAAC;AAVF,CAUE,CAAC;AAEL,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAAC,EAIS;QAHxC,0BAAU,EACV,cAAI,EACJ,0BAAU;IAEV,OAAA,wBAAwB,CAAC;QACvB,UAAU,YAAA;QACV,MAAM,mBAAoB;QAC1B,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;YACnB,MAAM,EAAE,UAAU,CAAC,MAAM;YACzB,aAAa,EAAE,UAAU,CAAC,YAAY;YACtC,QAAQ,EAAE,UAAU,CAAC,SAAS;SAC/B,CAAC;QACF,cAAc,EAAE,sBAAsB;QACtC,UAAU,EAAE,UAAQ,IAAI,CAAC,IAAI,YAAS;KACvC,CAAC;AAVF,CAUE,CAAC;AAEL,MAAM,CAAC,IAAM,WAAW,GAAG,UAAC,EAAqC;QAAnC,0BAAU,EAAE,cAAI;IAC5C,OAAA,wBAAwB,CAAC;QACvB,UAAU,YAAA;QACV,cAAc,EAAE,iBAAiB;QACjC,UAAU,EAAE,UAAQ,IAAI,CAAC,IAAM;KAChC,CAAC;AAJF,CAIE,CAAC\"}","code":"var _a, _b;\r\nimport { getFetchDispatcher } from '../request-utils';\r\nvar dispatchRolesFetch = getFetchDispatcher({\r\n    basePath: 'admin/roles',\r\n    allowedQueryParams: [],\r\n});\r\nvar dispatchPermissionsFetch = getFetchDispatcher({\r\n    basePath: 'admin/permissions',\r\n    allowedQueryParams: [],\r\n});\r\nvar jsonAcceptHeaders = (_a = {},\r\n    _a[\"Accept\" /* ACCEPT */] = \"application/json\" /* JSON */,\r\n    _a);\r\nvar jsonContentTypeHeaders = (_b = {},\r\n    _b[\"Content-Type\" /* CONTENT_TYPE */] = \"application/json\" /* JSON */,\r\n    _b);\r\nexport var create = function (_a) {\r\n    var connection = _a.connection, role = _a.role;\r\n    return dispatchRolesFetch({\r\n        connection: connection,\r\n        method: \"POST\" /* POST */,\r\n        body: JSON.stringify({ rolename: role.name }),\r\n        requestHeaders: jsonContentTypeHeaders,\r\n    });\r\n};\r\nexport var list = function (_a) {\r\n    var connection = _a.connection;\r\n    return dispatchRolesFetch({\r\n        connection: connection,\r\n        requestHeaders: jsonAcceptHeaders,\r\n    });\r\n};\r\nexport var deleteRole = function (_a) {\r\n    var connection = _a.connection, role = _a.role;\r\n    return dispatchRolesFetch({\r\n        connection: connection,\r\n        method: \"DELETE\" /* DELETE */,\r\n        pathSuffix: role.name,\r\n    });\r\n};\r\nexport var usersWithRole = function (_a) {\r\n    var connection = _a.connection, role = _a.role;\r\n    return dispatchRolesFetch({\r\n        connection: connection,\r\n        requestHeaders: jsonAcceptHeaders,\r\n        pathSuffix: role.name + \"/users\",\r\n    });\r\n};\r\n// resource types: db, user, role, admin, metadata, named-graph, icv-constraints, virtual-graph\r\n// actions: CREATE, DELETE, READ, WRITE, GRANT, REVOKE, EXECUTE\r\nexport var assignPermission = function (_a) {\r\n    var connection = _a.connection, role = _a.role, permission = _a.permission;\r\n    return dispatchPermissionsFetch({\r\n        connection: connection,\r\n        method: \"PUT\" /* PUT */,\r\n        body: JSON.stringify({\r\n            action: permission.action,\r\n            resource_type: permission.resourceType,\r\n            resource: permission.resources,\r\n        }),\r\n        requestHeaders: jsonContentTypeHeaders,\r\n        pathSuffix: \"role/\" + role.name,\r\n    });\r\n};\r\nexport var deletePermission = function (_a) {\r\n    var connection = _a.connection, role = _a.role, permission = _a.permission;\r\n    return dispatchPermissionsFetch({\r\n        connection: connection,\r\n        method: \"POST\" /* POST */,\r\n        body: JSON.stringify({\r\n            action: permission.action,\r\n            resource_type: permission.resourceType,\r\n            resource: permission.resources,\r\n        }),\r\n        requestHeaders: jsonContentTypeHeaders,\r\n        pathSuffix: \"role/\" + role.name + \"/delete\",\r\n    });\r\n};\r\nexport var permissions = function (_a) {\r\n    var connection = _a.connection, role = _a.role;\r\n    return dispatchPermissionsFetch({\r\n        connection: connection,\r\n        requestHeaders: jsonAcceptHeaders,\r\n        pathSuffix: \"role/\" + role.name,\r\n    });\r\n};\r\n//# sourceMappingURL=main.js.map","dts":{"name":"/Users/jason/Projects/stardog.js/role/main.d.ts","writeByteOrderMark":false,"text":"import { BaseOptions, BaseRoleOptions, BasePermissionOptions } from '../types';\r\nexport declare const create: ({ connection, role }: BaseRoleOptions) => Promise<Response>;\r\nexport declare const list: ({ connection }: BaseOptions) => Promise<Response>;\r\nexport declare const deleteRole: ({ connection, role }: BaseRoleOptions) => Promise<Response>;\r\nexport declare const usersWithRole: ({ connection, role }: BaseRoleOptions) => Promise<Response>;\r\nexport declare const assignPermission: ({ connection, role, permission, }: BaseRoleOptions & BasePermissionOptions) => Promise<Response>;\r\nexport declare const deletePermission: ({ connection, role, permission, }: BaseRoleOptions & BasePermissionOptions) => Promise<Response>;\r\nexport declare const permissions: ({ connection, role }: BaseRoleOptions) => Promise<Response>;\r\n"}}
